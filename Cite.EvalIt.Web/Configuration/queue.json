{
	"Queue": {
		"Task": {
			//RabbitMQ / DB
			"Provider": "%{QueueProvider}%",
			"Listener": {
				"RabbitMQ": {
					"Enable": true,
					"HostName": "%{RabbitMQHostName}%",
					"Port": "%{RabbitMQPort}%",
					"Username": "%{RabbitMQUsername}%",
					"Password": "%{RabbitMQPassword}%",
					"Exchange": null,
					"Durable": null,
					"QosPrefetchSize": 0,
					"QosPrefetchCount": 1,
					"QosGlobal": false,
					"IntervalSeconds": 10,
					"ConnectionRecovery": {
						"Enabled": true,
						"NetworkRecoveryInterval": 5000,
						"UnreachableRecoveryInterval": 5000
					},
					"Options": {
						//The number of retries for each notification
						"RetryThreashold": 100,
						//How much time to wait for each retry. The actual time will be accumulated based on previous retries. 
						//A random number between 50% - 100% of the latest accumulation is calcualted for each new try.
						//The MaxRetryDelaySeconds option puts a cap in the increments
						//5 minutes = 300 seconds
						"RetryDelayStepSeconds": 300,
						//For each accumulating delay step, this put a cap in the additional time to delay the retry
						//If notification has not been retried for more than this setting, a retry will be fired
						//3 hours in seconds = 10800
						"MaxRetryDelaySeconds": 10800,
						//If a notification has been created more than this time ago, do not send
						"TooOldToSendSeconds": 604800
					},
					"QueueName": null,
					"ForgetMeRequestTopic": [ "forgetme.request" ],
					"ForgetMeRevokeTopic": [ "forgetme.revoke" ],
					"UserRemovalTopic": [ "user.remove" ],
					"UserTouchedTopic": [ "user.touch" ],
					"WhatYouKnowAboutMeRequestTopic": [ "whatyouknowaboutme.request" ],
					"WhatYouKnowAboutMeRevokeTopic": [ "whatyouknowaboutme.revoke" ],
					"APIKeyStaleTopic": [ "apikey.stale" ],
					"GenerateFileCompletedTopic": [ "generatefile.completed" ]
				}
			},
			"Publisher": {
				"Options": {
					"Exchange": null,
					"ForgetMeCompletedTopic": "forgetme.completed",
					"NotifyTopic": "notification.notify",
					"TenantReactivationTopic": "tenant.reactivated",
					"TenantRemovalTopic": "tenant.remove",
					"TenantTouchTopic": "tenant.touch",
					"TenantUserInviteTopic": "tenant.invite",
					"WhatYouKnowAboutMeCompletedTopic": "whatyouknowaboutme.completed",
					"GenerateFileTopic": "generate.file"
				},
				"RabbitMQ": {
					"Enable": true,
					"HostName": "%{RabbitMQHostName}%",
					"Port": "%{RabbitMQPort}%",
					"Username": "%{RabbitMQUsername}%",
					"Password": "%{RabbitMQPassword}%",
					"Exchange": null,
					"Durable": null,
					"IntervalSeconds": 30,
					"Options": {
						//The number of retries for each notification
						"RetryThreashold": 100,
						//How much time to wait for each retry. The actual time will be accumulated based on previous retries. 
						//A random number between 50% - 100% of the latest accumulation is calcualted for each new try.
						//The MaxRetryDelaySeconds option puts a cap in the increments
						//5 minutes = 300 seconds
						"RetryDelayStepSeconds": 300,
						//For each accumulating delay step, this put a cap in the additional time to delay the retry
						//If notification has not been retried for more than this setting, a retry will be fired
						//3 hours in seconds = 10800
						"MaxRetryDelaySeconds": 10800,
						//If a notification has been created more than this time ago, do not send
						"TooOldToSendSeconds": 604800,
						//If a publisher confirm has been lost, retry
						"ConfirmTimeoutSeconds": 30
					},
					"ConnectionRecovery": {
						"Enabled": true,
						"NetworkRecoveryInterval": 5000,
						"UnreachableRecoveryInterval": 5000
					},
					"AppId": "%{TheAPIId}%"
				}
			}
		}
	}
}
